# GPTInfernse - –ü—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
.PHONY: help start stop restart status logs logs-f build clean test

# –¶–≤–µ—Ç–∞
BLUE=\033[0;34m
GREEN=\033[0;32m
YELLOW=\033[1;33m
NC=\033[0m

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(BLUE)üöÄ GPTInfernse - –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è$(NC)"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "$(GREEN)%-15s$(NC) %s\n", $$1, $$2}'

start: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ GPTInfernse...$(NC)"
	@./docker-start.sh

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ GPTInfernse...$(NC)"
	@./docker-stop.sh

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(BLUE)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ GPTInfernse...$(NC)"
	@./docker-stop.sh && ./docker-start.sh

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@if command -v docker-compose >/dev/null 2>&1; then \
		docker-compose ps; \
	elif docker compose version >/dev/null 2>&1; then \
		docker compose ps; \
	else \
		docker ps --filter "name=gptinfernse"; \
	fi

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
	@if command -v docker-compose >/dev/null 2>&1; then \
		docker-compose logs --tail=50; \
	elif docker compose version >/dev/null 2>&1; then \
		docker compose logs --tail=50; \
	else \
		docker logs --tail=50 gptinfernse-api; \
	fi

logs-f: ## –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
	@./show-logs

build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@if command -v docker-compose >/dev/null 2>&1; then \
		docker-compose build --no-cache; \
	elif docker compose version >/dev/null 2>&1; then \
		docker compose build --no-cache; \
	else \
		echo "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"; \
	fi

clean: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ)
	@echo "$(YELLOW)üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞...$(NC)"
	@./docker-stop.sh --clean

# –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã
health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ API
	@curl -s http://localhost:8000/health/detailed | jq . || echo "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

models: ## –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
	@curl -s http://localhost:8000/models/ | jq . || echo "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

chat-test: ## –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ —á–∞—Ç—É
	@curl -X POST http://localhost:8000/chat/sync \
		-H "Content-Type: application/json" \
		-d '{"prompt": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", "model": "llama3"}' | jq . || echo "–ß–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
flower: ## –û—Ç–∫—Ä—ã—Ç—å Flower (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Celery)
	@echo "$(GREEN)üå∏ Flower: http://localhost:5555 (admin/admin123)$(NC)"
	@open http://localhost:5555 2>/dev/null || xdg-open http://localhost:5555 2>/dev/null || echo "–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5555"

docs: ## –û—Ç–∫—Ä—ã—Ç—å API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "$(GREEN)üìö API Docs: http://localhost:8000/docs$(NC)"
	@open http://localhost:8000/docs 2>/dev/null || xdg-open http://localhost:8000/docs 2>/dev/null || echo "–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000/docs"

web: ## –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
	@echo "$(GREEN)üåê GPTInfernse: http://localhost:3000$(NC)"
	@open http://localhost:3000 2>/dev/null || xdg-open http://localhost:3000 2>/dev/null || echo "–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000"

# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
dev: ## –ó–∞–ø—É—Å–∫ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–±–µ–∑ Docker)
	@echo "$(BLUE)üõ†Ô∏è –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ —Ä–∞–∑–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–∞–ª–∞—Ö:"
	@echo "  uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
	@echo "  celery -A app.utils.celery_app worker --loglevel=info"
	@echo "  cd frontend && python3 server.py"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@pytest tests/ -v

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "$(BLUE)üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	@black app/ tests/
	@isort app/ tests/

# –ê–ª–∏–∞—Å—ã
up: start ## –ê–ª–∏–∞—Å –¥–ª—è start
down: stop ## –ê–ª–∏–∞—Å –¥–ª—è stop
ps: status ## –ê–ª–∏–∞—Å –¥–ª—è status

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É
.DEFAULT_GOAL := help